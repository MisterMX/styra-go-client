// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1TenantState v1 tenant state
//
// swagger:model v1.TenantState
type V1TenantState struct {

	// number current tokens
	// Required: true
	NumberCurrentTokens *int32 `json:"number_current_tokens"`

	// number desired tokens
	// Required: true
	NumberDesiredTokens *int32 `json:"number_desired_tokens"`

	// number extra tokens
	// Required: true
	NumberExtraTokens *int32 `json:"number_extra_tokens"`

	// number missing tokens
	// Required: true
	NumberMissingTokens *int32 `json:"number_missing_tokens"`
}

// Validate validates this v1 tenant state
func (m *V1TenantState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNumberCurrentTokens(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumberDesiredTokens(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumberExtraTokens(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNumberMissingTokens(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1TenantState) validateNumberCurrentTokens(formats strfmt.Registry) error {

	if err := validate.Required("number_current_tokens", "body", m.NumberCurrentTokens); err != nil {
		return err
	}

	return nil
}

func (m *V1TenantState) validateNumberDesiredTokens(formats strfmt.Registry) error {

	if err := validate.Required("number_desired_tokens", "body", m.NumberDesiredTokens); err != nil {
		return err
	}

	return nil
}

func (m *V1TenantState) validateNumberExtraTokens(formats strfmt.Registry) error {

	if err := validate.Required("number_extra_tokens", "body", m.NumberExtraTokens); err != nil {
		return err
	}

	return nil
}

func (m *V1TenantState) validateNumberMissingTokens(formats strfmt.Registry) error {

	if err := validate.Required("number_missing_tokens", "body", m.NumberMissingTokens); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 tenant state based on context it is used
func (m *V1TenantState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1TenantState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1TenantState) UnmarshalBinary(b []byte) error {
	var res V1TenantState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
