// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1ComplianceValidation v1 compliance validation
//
// swagger:model v1.ComplianceValidation
type V1ComplianceValidation struct {

	// all
	All []V1ComplianceValidationAll `json:"all"`

	// all count
	AllCount int32 `json:"all_count,omitempty"`

	// new
	New []V1ComplianceValidationNew `json:"new"`

	// new count
	NewCount int32 `json:"new_count,omitempty"`

	// resolved
	Resolved []V1ComplianceValidationResolved `json:"resolved"`

	// resolved count
	ResolvedCount int32 `json:"resolved_count,omitempty"`

	// unchanged
	Unchanged []V1ComplianceValidationUnchanged `json:"unchanged"`

	// unchanged count
	UnchangedCount int32 `json:"unchanged_count,omitempty"`
}

// Validate validates this v1 compliance validation
func (m *V1ComplianceValidation) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 compliance validation based on context it is used
func (m *V1ComplianceValidation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1ComplianceValidation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ComplianceValidation) UnmarshalBinary(b []byte) error {
	var res V1ComplianceValidation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
