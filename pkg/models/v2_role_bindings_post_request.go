// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V2RoleBindingsPostRequest v2 role bindings post request
//
// swagger:model v2.RoleBindingsPostRequest
type V2RoleBindingsPostRequest struct {

	// resource filter
	// Required: true
	ResourceFilter *V2ResourceFilter `json:"resource_filter"`
}

// Validate validates this v2 role bindings post request
func (m *V2RoleBindingsPostRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceFilter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2RoleBindingsPostRequest) validateResourceFilter(formats strfmt.Registry) error {

	if err := validate.Required("resource_filter", "body", m.ResourceFilter); err != nil {
		return err
	}

	if m.ResourceFilter != nil {
		if err := m.ResourceFilter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("resource_filter")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this v2 role bindings post request based on the context it is used
func (m *V2RoleBindingsPostRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateResourceFilter(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V2RoleBindingsPostRequest) contextValidateResourceFilter(ctx context.Context, formats strfmt.Registry) error {

	if m.ResourceFilter != nil {
		if err := m.ResourceFilter.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("resource_filter")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V2RoleBindingsPostRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V2RoleBindingsPostRequest) UnmarshalBinary(b []byte) error {
	var res V2RoleBindingsPostRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
