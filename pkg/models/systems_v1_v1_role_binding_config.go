// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SystemsV1V1RoleBindingConfig systems v1 v1 role binding config
//
// swagger:model systems.v1.V1RoleBindingConfig
type SystemsV1V1RoleBindingConfig struct {

	// role binding ID
	// Required: true
	ID *string `json:"id"`

	// role name
	// Required: true
	RoleName *string `json:"role_name"`
}

// Validate validates this systems v1 v1 role binding config
func (m *SystemsV1V1RoleBindingConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SystemsV1V1RoleBindingConfig) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *SystemsV1V1RoleBindingConfig) validateRoleName(formats strfmt.Registry) error {

	if err := validate.Required("role_name", "body", m.RoleName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this systems v1 v1 role binding config based on context it is used
func (m *SystemsV1V1RoleBindingConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SystemsV1V1RoleBindingConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SystemsV1V1RoleBindingConfig) UnmarshalBinary(b []byte) error {
	var res SystemsV1V1RoleBindingConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
