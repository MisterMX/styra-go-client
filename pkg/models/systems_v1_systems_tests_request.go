// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SystemsV1SystemsTestsRequest systems v1 systems tests request
//
// swagger:model systems.v1.SystemsTestsRequest
type SystemsV1SystemsTestsRequest struct {

	// draft policies to be used for 'new' violations computation (path => rego)
	Drafts map[string]string `json:"drafts,omitempty"`

	// validation mode. One of (delta, all, delta-count, all-count)
	Mode *string `json:"mode,omitempty"`

	// policy type to narrow the monitor policy search (e.g. validating, mutating). Default (empty string or missing) is to run all monitoring policies
	PolicyType string `json:"policy_type,omitempty"`
}

// Validate validates this systems v1 systems tests request
func (m *SystemsV1SystemsTestsRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this systems v1 systems tests request based on context it is used
func (m *SystemsV1SystemsTestsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SystemsV1SystemsTestsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SystemsV1SystemsTestsRequest) UnmarshalBinary(b []byte) error {
	var res SystemsV1SystemsTestsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
