// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mistermx/styra-go-client/pkg/models"
)

// NewUpdatePolicyParams creates a new UpdatePolicyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdatePolicyParams() *UpdatePolicyParams {
	return &UpdatePolicyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdatePolicyParamsWithTimeout creates a new UpdatePolicyParams object
// with the ability to set a timeout on a request.
func NewUpdatePolicyParamsWithTimeout(timeout time.Duration) *UpdatePolicyParams {
	return &UpdatePolicyParams{
		timeout: timeout,
	}
}

// NewUpdatePolicyParamsWithContext creates a new UpdatePolicyParams object
// with the ability to set a context for a request.
func NewUpdatePolicyParamsWithContext(ctx context.Context) *UpdatePolicyParams {
	return &UpdatePolicyParams{
		Context: ctx,
	}
}

// NewUpdatePolicyParamsWithHTTPClient creates a new UpdatePolicyParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdatePolicyParamsWithHTTPClient(client *http.Client) *UpdatePolicyParams {
	return &UpdatePolicyParams{
		HTTPClient: client,
	}
}

/* UpdatePolicyParams contains all the parameters to send to the API endpoint
   for the update policy operation.

   Typically these are written to a http.Request.
*/
type UpdatePolicyParams struct {

	/* IfNoneMatch.

	   etag
	*/
	IfNoneMatch *string

	// Body.
	Body *models.V1PoliciesPutRequest

	/* Policy.

	   policy name
	*/
	Policy string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update policy params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdatePolicyParams) WithDefaults() *UpdatePolicyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update policy params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdatePolicyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update policy params
func (o *UpdatePolicyParams) WithTimeout(timeout time.Duration) *UpdatePolicyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update policy params
func (o *UpdatePolicyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update policy params
func (o *UpdatePolicyParams) WithContext(ctx context.Context) *UpdatePolicyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update policy params
func (o *UpdatePolicyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update policy params
func (o *UpdatePolicyParams) WithHTTPClient(client *http.Client) *UpdatePolicyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update policy params
func (o *UpdatePolicyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfNoneMatch adds the ifNoneMatch to the update policy params
func (o *UpdatePolicyParams) WithIfNoneMatch(ifNoneMatch *string) *UpdatePolicyParams {
	o.SetIfNoneMatch(ifNoneMatch)
	return o
}

// SetIfNoneMatch adds the ifNoneMatch to the update policy params
func (o *UpdatePolicyParams) SetIfNoneMatch(ifNoneMatch *string) {
	o.IfNoneMatch = ifNoneMatch
}

// WithBody adds the body to the update policy params
func (o *UpdatePolicyParams) WithBody(body *models.V1PoliciesPutRequest) *UpdatePolicyParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update policy params
func (o *UpdatePolicyParams) SetBody(body *models.V1PoliciesPutRequest) {
	o.Body = body
}

// WithPolicy adds the policy to the update policy params
func (o *UpdatePolicyParams) WithPolicy(policy string) *UpdatePolicyParams {
	o.SetPolicy(policy)
	return o
}

// SetPolicy adds the policy to the update policy params
func (o *UpdatePolicyParams) SetPolicy(policy string) {
	o.Policy = policy
}

// WriteToRequest writes these params to a swagger request
func (o *UpdatePolicyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfNoneMatch != nil {

		// header param If-None-Match
		if err := r.SetHeaderParam("If-None-Match", *o.IfNoneMatch); err != nil {
			return err
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param policy
	if err := r.SetPathParam("policy", o.Policy); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
