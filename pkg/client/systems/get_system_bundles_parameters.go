// Code generated by go-swagger; DO NOT EDIT.

package systems

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetSystemBundlesParams creates a new GetSystemBundlesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSystemBundlesParams() *GetSystemBundlesParams {
	return &GetSystemBundlesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSystemBundlesParamsWithTimeout creates a new GetSystemBundlesParams object
// with the ability to set a timeout on a request.
func NewGetSystemBundlesParamsWithTimeout(timeout time.Duration) *GetSystemBundlesParams {
	return &GetSystemBundlesParams{
		timeout: timeout,
	}
}

// NewGetSystemBundlesParamsWithContext creates a new GetSystemBundlesParams object
// with the ability to set a context for a request.
func NewGetSystemBundlesParamsWithContext(ctx context.Context) *GetSystemBundlesParams {
	return &GetSystemBundlesParams{
		Context: ctx,
	}
}

// NewGetSystemBundlesParamsWithHTTPClient creates a new GetSystemBundlesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSystemBundlesParamsWithHTTPClient(client *http.Client) *GetSystemBundlesParams {
	return &GetSystemBundlesParams{
		HTTPClient: client,
	}
}

/* GetSystemBundlesParams contains all the parameters to send to the API endpoint
   for the get system bundles operation.

   Typically these are written to a http.Request.
*/
type GetSystemBundlesParams struct {

	/* Past.

	   if set to 'true', returns only bundles deployed in the past
	*/
	Past *bool

	/* System.

	   system ID
	*/
	System string

	/* Version.

	   if set, the newest version to return
	*/
	Version *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get system bundles params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSystemBundlesParams) WithDefaults() *GetSystemBundlesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get system bundles params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSystemBundlesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get system bundles params
func (o *GetSystemBundlesParams) WithTimeout(timeout time.Duration) *GetSystemBundlesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get system bundles params
func (o *GetSystemBundlesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get system bundles params
func (o *GetSystemBundlesParams) WithContext(ctx context.Context) *GetSystemBundlesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get system bundles params
func (o *GetSystemBundlesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get system bundles params
func (o *GetSystemBundlesParams) WithHTTPClient(client *http.Client) *GetSystemBundlesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get system bundles params
func (o *GetSystemBundlesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPast adds the past to the get system bundles params
func (o *GetSystemBundlesParams) WithPast(past *bool) *GetSystemBundlesParams {
	o.SetPast(past)
	return o
}

// SetPast adds the past to the get system bundles params
func (o *GetSystemBundlesParams) SetPast(past *bool) {
	o.Past = past
}

// WithSystem adds the system to the get system bundles params
func (o *GetSystemBundlesParams) WithSystem(system string) *GetSystemBundlesParams {
	o.SetSystem(system)
	return o
}

// SetSystem adds the system to the get system bundles params
func (o *GetSystemBundlesParams) SetSystem(system string) {
	o.System = system
}

// WithVersion adds the version to the get system bundles params
func (o *GetSystemBundlesParams) WithVersion(version *int64) *GetSystemBundlesParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get system bundles params
func (o *GetSystemBundlesParams) SetVersion(version *int64) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetSystemBundlesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Past != nil {

		// query param past
		var qrPast bool

		if o.Past != nil {
			qrPast = *o.Past
		}
		qPast := swag.FormatBool(qrPast)
		if qPast != "" {

			if err := r.SetQueryParam("past", qPast); err != nil {
				return err
			}
		}
	}

	// path param system
	if err := r.SetPathParam("system", o.System); err != nil {
		return err
	}

	if o.Version != nil {

		// query param version
		var qrVersion int64

		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := swag.FormatInt64(qrVersion)
		if qVersion != "" {

			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
