// Code generated by go-swagger; DO NOT EDIT.

package systems

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewRuleSuggestionsParams creates a new RuleSuggestionsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRuleSuggestionsParams() *RuleSuggestionsParams {
	return &RuleSuggestionsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRuleSuggestionsParamsWithTimeout creates a new RuleSuggestionsParams object
// with the ability to set a timeout on a request.
func NewRuleSuggestionsParamsWithTimeout(timeout time.Duration) *RuleSuggestionsParams {
	return &RuleSuggestionsParams{
		timeout: timeout,
	}
}

// NewRuleSuggestionsParamsWithContext creates a new RuleSuggestionsParams object
// with the ability to set a context for a request.
func NewRuleSuggestionsParamsWithContext(ctx context.Context) *RuleSuggestionsParams {
	return &RuleSuggestionsParams{
		Context: ctx,
	}
}

// NewRuleSuggestionsParamsWithHTTPClient creates a new RuleSuggestionsParams object
// with the ability to set a custom HTTPClient for a request.
func NewRuleSuggestionsParamsWithHTTPClient(client *http.Client) *RuleSuggestionsParams {
	return &RuleSuggestionsParams{
		HTTPClient: client,
	}
}

/* RuleSuggestionsParams contains all the parameters to send to the API endpoint
   for the rule suggestions operation.

   Typically these are written to a http.Request.
*/
type RuleSuggestionsParams struct {

	/* Stateful.

	   true to get only the stateful suggestions, false for stateless, omit for both
	*/
	Stateful *bool

	/* System.

	   system ID
	*/
	System string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the rule suggestions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RuleSuggestionsParams) WithDefaults() *RuleSuggestionsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the rule suggestions params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RuleSuggestionsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the rule suggestions params
func (o *RuleSuggestionsParams) WithTimeout(timeout time.Duration) *RuleSuggestionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the rule suggestions params
func (o *RuleSuggestionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the rule suggestions params
func (o *RuleSuggestionsParams) WithContext(ctx context.Context) *RuleSuggestionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the rule suggestions params
func (o *RuleSuggestionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the rule suggestions params
func (o *RuleSuggestionsParams) WithHTTPClient(client *http.Client) *RuleSuggestionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the rule suggestions params
func (o *RuleSuggestionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithStateful adds the stateful to the rule suggestions params
func (o *RuleSuggestionsParams) WithStateful(stateful *bool) *RuleSuggestionsParams {
	o.SetStateful(stateful)
	return o
}

// SetStateful adds the stateful to the rule suggestions params
func (o *RuleSuggestionsParams) SetStateful(stateful *bool) {
	o.Stateful = stateful
}

// WithSystem adds the system to the rule suggestions params
func (o *RuleSuggestionsParams) WithSystem(system string) *RuleSuggestionsParams {
	o.SetSystem(system)
	return o
}

// SetSystem adds the system to the rule suggestions params
func (o *RuleSuggestionsParams) SetSystem(system string) {
	o.System = system
}

// WriteToRequest writes these params to a swagger request
func (o *RuleSuggestionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Stateful != nil {

		// query param stateful
		var qrStateful bool

		if o.Stateful != nil {
			qrStateful = *o.Stateful
		}
		qStateful := swag.FormatBool(qrStateful)
		if qStateful != "" {

			if err := r.SetQueryParam("stateful", qStateful); err != nil {
				return err
			}
		}
	}

	// path param system
	if err := r.SetPathParam("system", o.System); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
