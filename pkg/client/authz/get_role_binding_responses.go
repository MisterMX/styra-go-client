// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mistermx/styra-go-client/pkg/models"
)

// GetRoleBindingReader is a Reader for the GetRoleBinding structure.
type GetRoleBindingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoleBindingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoleBindingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetRoleBindingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRoleBindingOK creates a GetRoleBindingOK with default headers values
func NewGetRoleBindingOK() *GetRoleBindingOK {
	return &GetRoleBindingOK{}
}

/* GetRoleBindingOK describes a response with status code 200, with default header values.

OK
*/
type GetRoleBindingOK struct {
	Payload *models.V1RoleBindingsGetResponse
}

func (o *GetRoleBindingOK) Error() string {
	return fmt.Sprintf("[GET /v1/authz/rolebindings/{resourcetype}/{resource}/{rolebinding}][%d] getRoleBindingOK  %+v", 200, o.Payload)
}
func (o *GetRoleBindingOK) GetPayload() *models.V1RoleBindingsGetResponse {
	return o.Payload
}

func (o *GetRoleBindingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1RoleBindingsGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoleBindingNotFound creates a GetRoleBindingNotFound with default headers values
func NewGetRoleBindingNotFound() *GetRoleBindingNotFound {
	return &GetRoleBindingNotFound{}
}

/* GetRoleBindingNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRoleBindingNotFound struct {
	Payload *models.V1ErrorResponse
}

func (o *GetRoleBindingNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/authz/rolebindings/{resourcetype}/{resource}/{rolebinding}][%d] getRoleBindingNotFound  %+v", 404, o.Payload)
}
func (o *GetRoleBindingNotFound) GetPayload() *models.V1ErrorResponse {
	return o.Payload
}

func (o *GetRoleBindingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
