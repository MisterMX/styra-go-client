// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mistermx/styra-go-client/pkg/models"
)

// UpdateRoleBindingReader is a Reader for the UpdateRoleBinding structure.
type UpdateRoleBindingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRoleBindingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRoleBindingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateRoleBindingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRoleBindingOK creates a UpdateRoleBindingOK with default headers values
func NewUpdateRoleBindingOK() *UpdateRoleBindingOK {
	return &UpdateRoleBindingOK{}
}

/* UpdateRoleBindingOK describes a response with status code 200, with default header values.

OK
*/
type UpdateRoleBindingOK struct {
	Payload *models.AuthzV1RoleBindingsPutResponse
}

func (o *UpdateRoleBindingOK) Error() string {
	return fmt.Sprintf("[PUT /v1/authz/rolebindings/{resourcetype}/{resource}/{rolebinding}][%d] updateRoleBindingOK  %+v", 200, o.Payload)
}
func (o *UpdateRoleBindingOK) GetPayload() *models.AuthzV1RoleBindingsPutResponse {
	return o.Payload
}

func (o *UpdateRoleBindingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthzV1RoleBindingsPutResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleBindingNotFound creates a UpdateRoleBindingNotFound with default headers values
func NewUpdateRoleBindingNotFound() *UpdateRoleBindingNotFound {
	return &UpdateRoleBindingNotFound{}
}

/* UpdateRoleBindingNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateRoleBindingNotFound struct {
	Payload *models.MetaV1ErrorResponse
}

func (o *UpdateRoleBindingNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/authz/rolebindings/{resourcetype}/{resource}/{rolebinding}][%d] updateRoleBindingNotFound  %+v", 404, o.Payload)
}
func (o *UpdateRoleBindingNotFound) GetPayload() *models.MetaV1ErrorResponse {
	return o.Payload
}

func (o *UpdateRoleBindingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetaV1ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
