// Code generated by go-swagger; DO NOT EDIT.

package timeseries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mistermx/styra-go-client/pkg/models"
)

// HandleUsageReader is a Reader for the HandleUsage structure.
type HandleUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HandleUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHandleUsageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHandleUsageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewHandleUsageOK creates a HandleUsageOK with default headers values
func NewHandleUsageOK() *HandleUsageOK {
	return &HandleUsageOK{}
}

/* HandleUsageOK describes a response with status code 200, with default header values.

OK
*/
type HandleUsageOK struct {
	Payload *models.V1TimeSeriesUsagePostResponse
}

func (o *HandleUsageOK) Error() string {
	return fmt.Sprintf("[POST /v1/timeseries/usage][%d] handleUsageOK  %+v", 200, o.Payload)
}
func (o *HandleUsageOK) GetPayload() *models.V1TimeSeriesUsagePostResponse {
	return o.Payload
}

func (o *HandleUsageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1TimeSeriesUsagePostResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHandleUsageBadRequest creates a HandleUsageBadRequest with default headers values
func NewHandleUsageBadRequest() *HandleUsageBadRequest {
	return &HandleUsageBadRequest{}
}

/* HandleUsageBadRequest describes a response with status code 400, with default header values.

Invalid Parameter
*/
type HandleUsageBadRequest struct {
	Payload *models.V1ErrorResponse
}

func (o *HandleUsageBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/timeseries/usage][%d] handleUsageBadRequest  %+v", 400, o.Payload)
}
func (o *HandleUsageBadRequest) GetPayload() *models.V1ErrorResponse {
	return o.Payload
}

func (o *HandleUsageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
