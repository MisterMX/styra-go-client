// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mistermx/styra-go-client/pkg/models"
)

// SourceControlVerifyConfigStackReader is a Reader for the SourceControlVerifyConfigStack structure.
type SourceControlVerifyConfigStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SourceControlVerifyConfigStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSourceControlVerifyConfigStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSourceControlVerifyConfigStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSourceControlVerifyConfigStackOK creates a SourceControlVerifyConfigStackOK with default headers values
func NewSourceControlVerifyConfigStackOK() *SourceControlVerifyConfigStackOK {
	return &SourceControlVerifyConfigStackOK{}
}

/* SourceControlVerifyConfigStackOK describes a response with status code 200, with default header values.

OK
*/
type SourceControlVerifyConfigStackOK struct {
	Payload *models.GitV1VerifyConfigResponse
}

func (o *SourceControlVerifyConfigStackOK) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/source-control/verify-config][%d] sourceControlVerifyConfigStackOK  %+v", 200, o.Payload)
}
func (o *SourceControlVerifyConfigStackOK) GetPayload() *models.GitV1VerifyConfigResponse {
	return o.Payload
}

func (o *SourceControlVerifyConfigStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GitV1VerifyConfigResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSourceControlVerifyConfigStackBadRequest creates a SourceControlVerifyConfigStackBadRequest with default headers values
func NewSourceControlVerifyConfigStackBadRequest() *SourceControlVerifyConfigStackBadRequest {
	return &SourceControlVerifyConfigStackBadRequest{}
}

/* SourceControlVerifyConfigStackBadRequest describes a response with status code 400, with default header values.

Invalid Parameter
*/
type SourceControlVerifyConfigStackBadRequest struct {
	Payload *models.MetaV1ErrorResponse
}

func (o *SourceControlVerifyConfigStackBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/stacks/source-control/verify-config][%d] sourceControlVerifyConfigStackBadRequest  %+v", 400, o.Payload)
}
func (o *SourceControlVerifyConfigStackBadRequest) GetPayload() *models.MetaV1ErrorResponse {
	return o.Payload
}

func (o *SourceControlVerifyConfigStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetaV1ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
